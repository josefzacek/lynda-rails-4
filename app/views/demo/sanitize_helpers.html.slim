h1 Sanitize helpers

p = link_to 'ActionView::Helpers::SanitizeHelper', 'http://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html', target: '_blank'

p Rails by default sanitize all text to prevent from SQL injection

hr

- evil_string = "<script>alert('Gotcha');</script>"

- good_string = "<strong>Welcome to my site!</strong>"

= evil_string

br

= good_string


hr

h3 raw()

p Lets unsafe characters in (not safe), text above would show javascript alert box and bold text.

= raw(evil_string)

br

= raw(good_string)

hr

h3 html_safe?

p Tells if string is safe (true/false)

= evil_string.html_safe?

br

= good_string.html_safe?

hr

h3 html_safe

p allows to tell rails that this string is safe

p = "<strong>this string is wrapped in &lt;strong&gt; tags but has .html_safe added</strong>".html_safe

hr

h3 strip_links

p josefzacek.com is wrapped in &lt;a&gt; tag however this function removes link as its name suggest

- simple_string = "<strong>Please</strong> visit <a href='http://josefzacek.com'>josefzacek.com</a>"

p = strip_links(simple_string)

hr

h3 strip_tags

p removes all html tags

- simple_string = "<strong>Please</strong> visit <a href='http://josefzacek.com'>josefzacek.com</a>"

p = strip_tags(simple_string)

hr

h3 sanitize

p strips all tags and attributes that aren't whitelisted.

p = sanitize(simple_string, tags: [])

p = sanitize(simple_string, tags: ['strong', 'a'])







